#!/usr/bin/perl

if (@ARGV == 0){
  print STDERR "$0 (qsub arguments and script to invoke remotely)\n";
  print STDERR "This program is a wrapper for qsub to run jobs\n";
  print STDERR "on multiple cluster using Panfish multicluster job submitter\n";
  exit(1);
}


$newArgList = "";
#extract stderr and stdout file paths and build a new argument list
for ($x = 0; $x < @ARGV;$x++){
  if ($ARGV[$x] eq "-e"){
    $stderr = $ARGV[++$x];
  }elsif ($ARGV[$x] eq "-o"){
    $stdout = $ARGV[++$x];
  }
  elsif ($x+1 >= @ARGV) {
    $lastArg = $ARGV[$x];
  }
  else {
    $newArgList .=" $ARGV[$x]";
  }
}
#escape any $
$stderr=~s/\$TASK_ID/\\\$SGE_TASK_ID/g;
$stderr=~s/\$JOB_ID/\\\$JOB_ID/g;
$stdout=~s/\$TASK_ID/\\\$SGE_TASK_ID/g;
$stdout=~s/\$JOB_ID/\\\$JOB_ID/g;
#print "STDERR: $stderr\n";
#print "STDOUT: $stdout\n";
#print "new arg list: $newArgList\n";

$cmd = "qsub $newArgList -e /home/churas/src/panfish/p2/out/\\\$JOB_ID.\\\$TASK_ID.err -o /home/churas/src/panfish/p2/out/\\\$JOB_ID.\\\$TASK_ID.out /home/churas/src/panfish/p2/line $stdout $stderr $lastArg";
#print "Running $cmd\n";
$OUTPUT = `$cmd 2>&1`;

$exitcode = $?;

print "$OUTPUT\n";
exit($exitcode);
1;

__END__

=head1 NAME

cast - Submit a job to Panfish Multicluster Grid Engine Wrapper

=head1 SYNOPSIS

cast [ B<options> ] [ B<command> | -- B<command_args> ]

=head1 DESCRIPTION

B<Cast> submits jobs to Panfish Multicluster Grid Engine
Wrapper which allows a script based serial B<command> 
to be run on a remote cluster. 

B<Cast> does this by first pushing data specified by directives in the 
B<command> script to the remote clusters followed by a submission of a 
shadow job to the local Grid Engine.  Once started, the shadow job 
then handles running and monitoring of the actual B<command> on the 
remote cluster.  Upon B<command> completion the shadow job exits.  The 
caller of B<Cast> can monitor the status of their job by using B<qstat> 
on the id of the shadow jobs output from the B<Cast> call.

B<NOTE:>  It is the responsibility of the caller to invoke B<land> to 
retrieve the data from the remote cluster once the job completes.

=head1 OPTIONS

B<Cast> only implements a small subset of the options in B<qsub> which are
described as follows.

=over 4

=item B<-t [-m[:s]]>

Submits an array job with the environment variable B<SGE_TASK_ID> set to index number of job.   

=item B<-e path,...>

Defines path of standard error stream.  
The following variables can be used in construction of the path and will be set appropriately:

=over 8

=item $USER       user ID of job owner

=item $JOB_ID     current job ID

=item $TASK_ID    array job task index number

Z<>

=back

This value can also be set within the B<command> using
the B<#$PANFISH> directive.

=item B<-o path,...>

Defines path of standard output stream.  See B<-e> description for allowed 
variables in B<path>  This value can also be set within the B<command> using
the B<#$PANFISH> directive.


=item B<-q wc_queue_list>

Defines list of queues this job can run under.  The queues should correspond to
valid shadow queues.  This value can also be set within the B<command> using
the B<#$PANFISH> directive.

=item B<-dir path>

Defines directory to upload to remote clusters.  B<Cast> will upload the contents of
this directory to all remote clusters in B<-q> queue list when set.  If not set no
upload operation is performed.  This value can also be set within the B<command> using
the B<#$PANFISH> directive.  NOTE:  This is not an option in B<qsub>.

=item B<command>

The job to run.  This B<command> must be a script file and must meet the following conditions:

=over 12

=item Any Grid Engine directives ie B<#$> in the B<command> script will be ignored.  Please use B<#$PANFISH> directives.

Z<>

=item B<Command> must be a bash script invoking commands and tools that can be run on any of the remote clusters.

Z<>

=item B<Command> must use B<PANFISH_BASEDIR> variable to prefix any paths.  A list of all environment variables that will be
set can be seen in the B<ENVIRONMENT VARIABLES> section below.

Z<>

=item B<Command> must NOT assume output from any other job enqueued or running in B<Panfish> will be available to it.

Z<>

=back



=head1 ENVIRONMENT_VARIABLES

The following environment variables are set for B<command> run on remote 
clusters. 

Z<>

=over 16

=item PANFISH_SCRATCH_DIR   Path to temp directory.

=item PANFISH_BASEDIR      Base path of filesystem on remote clusters.  This should be
                           prefixed on all paths in script.

=item SGE_TASK_ID          Task ID of job.  If non array job is submitted this will be empty.

=back 

Z<>



=head1 RESTRICTIONS

B<Panfish> relies on environment variables to alias paths so all
paths refered by B<Command> must be relative or utilize B<ENVIRONMENT VARIABLES>
listed above.


=head1 EXIT STATUS

=over

=item 0     Operation was successful.

=item >0    Error.

=back

=head1 EXAMPLES

=head1 FILES

 hello

=head1 AUTHOR

more stuff to look at

=head1 REPORTING BUGS

bugs


=head1 COPYRIGHT

blah blah

=head1 SEE ALSO

more blah



=cut
