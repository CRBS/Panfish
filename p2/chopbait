#!/usr/bin/perl

if (@ARGV < 1){
  print STDERR "$0 <script to chopup aka fix> <cluster to use if omitted all are used>\n";
  exit(1);
}

#
# Constants
# 
$QUEUE_LIST = "queue.list";
$PANFISH_PROPERTIES = "panfish.properties";
$SUB_VAR = "subvar";


my $propFile = `dirname $0`;
chomp($propFile);
$propFile.="/".$PANFISH_PROPERTIES;

print "$propFile\n";


my $script = $ARGV[0];

my $clusterList;


my $propHash = createPropHash($propFile);

if (@ARGV == 2){
  $clusterList[0] = $ARGV[1];
}
else {
  @clusterList = split(",",$propHash->{$QUEUE_LIST});
}

my $cntr = 0;
while ( my ($key, $value) = each(%$propHash) ) {
#    print "$key => $value\n";
    if ($key=~m/^.*subvar\.(.*)$/){
#  print "$key => $value\n";
       $varList[$cntr++]=$1;
    }
}


my $lineToWrite = "";

for (my $x = 0; $x < @clusterList; $x++){
  print "Cluster: $clusterList[$x]\n";
  open(INPUT,$script) || die $!;
  my $outFile = $script.".".$clusterList[$x];
  print "Writing file: $outFile\n";
  open(OUTPUT,">$outFile") || die $!;
  while(<INPUT>){
     chomp();
     $lineToWrite = $_;
     for (my $y = 0; $y < @varList; $y++){
        if ($lineToWrite=~/^$varList[$y]/){
            $theKey = $clusterList[$x].".".$SUB_VAR.".".$varList[$y];
            $newVal = $propHash->{$theKey};
            if (defined($newVal)){
	       $lineToWrite = $varList[$y]."=".$newVal;
               break;
            }
            else {
               print STDERR "No value for variable the key: $theKey in $propFile\n";
               break;
            }
            
        }
     }
     print OUTPUT "$lineToWrite\n";
  }
  close(INPUT);
  close(OUTPUT);
  `chmod a+x $outFile`;
}



#
#
# create prop hash
sub createPropHash {
  my $propfile = shift;
  my %propHash = ();

  open(DATA,$propfile) || die $!;

  while(<DATA>){
    chomp();
    $line = $_;
    if ($line=~/^(.*) *= *(.*)$/){
      $propHash{$1}=$2;
    } 
  }
  close(DATA);

  return \%propHash;
}





   


